/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.alysee.tp_jdbc;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/**
 * Fenetre Principale : S'ouvre lors du lancement
 * Affiche la liste de tous les médecins, la mise à jour d'un médecin, la suppression et le bouton qui lance la fenetre d'insertion
 * ainsi que le bouton pour lancer la fenetre de gestion des RV, et la fenetre pour la liste des clients d'un médecin
 * @author Alysee
 */
public class JFramePrincipale extends javax.swing.JFrame {
    
    private DefaultListModel modelMedecin = new DefaultListModel(); 

    public JFramePrincipale() {
        
        initComponents();
        // Le jTextField ID, pour la mise à jour d'un médecin n'est pas accessible, pour ne pas qu'on puisse modifier l'id
        jTextFieldMAJID.setVisible(false);
        
        //On donne à la liste "jListMedecins" le model contenant les données
        this.jListMedecins.setModel(this.modelMedecin); 
        
        // Instance de la classe Requete, ou on recupere la méthode listeDesMedecin(), que l'on stocke dans une liste Medecin
        Requetes requetes = new Requetes();
        List<Medecin> medecins = requetes.listeDesMedecins();
        
        //Parcours de la liste précédentes, dans laquelle on ajoute les médecins
        for (Medecin m : medecins){
            modelMedecin.addElement(m);
        }
       
        //Clique sur un médecin de la liste
        jListMedecins.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // On recupere le médecin sur lequel on a cliqué
                Medecin medecinSelectionne = (Medecin) modelMedecin.getElementAt(jListMedecins.getSelectedIndex());
                    // On affiche dans les jTextFields de mise à jour, les données du médecin
                    jTextFieldMAJNom.setText(medecinSelectionne.getLastName());
                    jTextFieldMAJPrenom.setText(medecinSelectionne.getFirstName());
                    jTextFieldMAJID.setText(String.valueOf(medecinSelectionne.getId()));
                }
        });
    }         
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListMedecins = new javax.swing.JList();
        jLabelListeMedecin = new javax.swing.JLabel();
        jButtonInsererMed = new javax.swing.JButton();
        jButtonSuppMed = new javax.swing.JButton();
        jLabeltitre = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldMAJNom = new javax.swing.JTextField();
        jTextFieldMAJPrenom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonEnregistreModif = new javax.swing.JButton();
        jTextFieldMAJID = new javax.swing.JTextField();
        jButtonGererRv = new javax.swing.JButton();
        jButtonClientDunMed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jListMedecins.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListMedecins.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListMedecinsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListMedecins);

        jLabelListeMedecin.setText("Liste des médecins");

        jButtonInsererMed.setText("Insertion");
        jButtonInsererMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsererMedActionPerformed(evt);
            }
        });

        jButtonSuppMed.setText("Suppression");
        jButtonSuppMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuppMedActionPerformed(evt);
            }
        });

        jLabeltitre.setText("MEDECIN");

        jLabel2.setText("Modification médecin ");

        jLabel3.setText("Nom :");

        jLabel4.setText("Prenom :");

        jButtonEnregistreModif.setText("Enregistrer les modifications");
        jButtonEnregistreModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnregistreModifActionPerformed(evt);
            }
        });

        jButtonGererRv.setText("Gérer RV du médecin");
        jButtonGererRv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGererRvActionPerformed(evt);
            }
        });

        jButtonClientDunMed.setText("Client d'un médecin");
        jButtonClientDunMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClientDunMedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButtonSuppMed, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonInsererMed, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonEnregistreModif)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabelListeMedecin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonGererRv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonClientDunMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(129, 129, 129)
                                        .addComponent(jTextFieldMAJID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldMAJPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldMAJNom, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(60, 60, 60))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabeltitre)
                .addGap(298, 298, 298))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabeltitre)
                        .addGap(28, 28, 28)
                        .addComponent(jLabelListeMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jButtonGererRv)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonClientDunMed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jButtonInsererMed))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldMAJID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldMAJNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldMAJPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(63, 63, 63)
                        .addComponent(jButtonEnregistreModif)
                        .addGap(9, 9, 9)))
                .addComponent(jButtonSuppMed)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInsererMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsererMedActionPerformed
        /* 
            BOUTON INSERER MEDECIN
            Ouverture de la fenetre "Inserer un médecin" dès que l'on clique sur le bouton "Insertion",
            qui prend en paramètre la liste des médecins
         */
        JFrameInsererMedecin frameInsertionMedecin = new JFrameInsererMedecin(jListMedecins);
        frameInsertionMedecin.setVisible(true);
    }//GEN-LAST:event_jButtonInsererMedActionPerformed

    private void jButtonSuppMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuppMedActionPerformed
       /*
            BOUTON SUPPRIMER MEDECIN
            Dès que l'on clique sur le bouton "Suppression", on va regarder "si" on clique bien sur un médecin, si oui
            alors on passe dans le "else" où on récupère le medecin sélectionné, on va instancié la classe des Requetes
            afin de récupérer notre méthode "supprimerMedecin()"
        */
        
        if (jListMedecins.isSelectionEmpty()){
            JOptionPane.showMessageDialog(null, "Vous n'avez pas sélectionné de médecin", "Erreur", JOptionPane.ERROR_MESSAGE);

        }
        else {
            Medecin medecinSelectionne = (Medecin) modelMedecin.getElementAt(jListMedecins.getSelectedIndex()); 
            Requetes requetes = new Requetes();
            requetes.supprimerMedecin(medecinSelectionne);
               
            /*
                Pour rafraichir la liste apres la suppression du médecin
            */
            DefaultListModel model = (DefaultListModel)this.jListMedecins.getModel();
            model.removeAllElements();
            List<Medecin> medecins = requetes.listeDesMedecins();
            for (Medecin m : medecins){
                model.addElement(m);
            }
        }
    }//GEN-LAST:event_jButtonSuppMedActionPerformed

    private void jListMedecinsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListMedecinsMouseClicked
       
    }//GEN-LAST:event_jListMedecinsMouseClicked

    private void jButtonEnregistreModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnregistreModifActionPerformed
        /*
            MISE A JOUR DUN MEDECIN
            Modification du nom et/ou prénom du médecin que l'on aura préalement sélectionné
        */
        // Récupération des données saisis dans les jTextFields (Saud Id, défini comme non visible)
        String nom      = jTextFieldMAJNom.getText();
        String prenom   = jTextFieldMAJPrenom.getText();
        String id       = jTextFieldMAJID.getText();

        /*
            On va verifier s'il n'y a pas de jTextField vide, on va changer le nom et prénom du médecin sélectionné par les nouvelles valeurs
            On va ensuite instancié la classe Requete pour récupérer la méthode "majMedecin()"
        */
        if (!jTextFieldMAJNom.getText().equals("") && !jTextFieldMAJPrenom.getText().equals("")){
            Medecin medecinSelectionne = (Medecin) modelMedecin.getElementAt(jListMedecins.getSelectedIndex());
            medecinSelectionne.setLastName(nom);
            medecinSelectionne.setFirstName(prenom);
            
            Requetes requetes = new Requetes();
            requetes.majMedecin(medecinSelectionne);
            
            /*
                Pour rafraichir la liste avec les nouveaux nom et/ou prénom du médecin
            */
            modelMedecin.removeAllElements();
            List<Medecin> medecins = requetes.listeDesMedecins();
            for (Medecin m : medecins){
                modelMedecin.addElement(m);
            } 
        } else {
            JOptionPane.showMessageDialog(null, "Vous avez laisser un ou plusieurs champs vides", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEnregistreModifActionPerformed

    private void jButtonGererRvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGererRvActionPerformed
        /*
            BOUTON GERER LES RV
            Clique sur un médecin, afin d'accéder à la fenetre "JFrameGestionRV" qui prend en paramètre le médecin qu'on aura sélectionné
        */
        
        if (jListMedecins.isSelectionEmpty()){
            JOptionPane.showMessageDialog(null, "Vous n'avez pas sélectionné de médecin", "Erreur", JOptionPane.ERROR_MESSAGE);

        }
        else {
            Medecin medecinSelectionne = (Medecin) modelMedecin.getElementAt(jListMedecins.getSelectedIndex()); 
            JFrameGestionRV gestionRV = new JFrameGestionRV(medecinSelectionne);
            gestionRV.setVisible(true);
        }
    }//GEN-LAST:event_jButtonGererRvActionPerformed

    private void jButtonClientDunMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClientDunMedActionPerformed
        /*
           BOUTON CLIENTS DUN MEDECIN
           Clique sur un médecin, afin d'accéder à la fenetre "JFrameClientDunMedecin" qui prend en paramètre le médecin qu'on aura sélectionné
        */
        
        if (jListMedecins.isSelectionEmpty()){
            JOptionPane.showMessageDialog(null, "Vous n'avez pas sélectionné de médecin", "Erreur", JOptionPane.ERROR_MESSAGE);

        }
        else {
            Medecin medecinSelectionne = (Medecin) modelMedecin.getElementAt(jListMedecins.getSelectedIndex()); 
            JFrameClientDunMedecin clientDunMedecin = new JFrameClientDunMedecin(medecinSelectionne);
            clientDunMedecin.setVisible(true);
        }
    }//GEN-LAST:event_jButtonClientDunMedActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFramePrincipale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClientDunMed;
    private javax.swing.JButton jButtonEnregistreModif;
    private javax.swing.JButton jButtonGererRv;
    private javax.swing.JButton jButtonInsererMed;
    private javax.swing.JButton jButtonSuppMed;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelListeMedecin;
    private javax.swing.JLabel jLabeltitre;
    private javax.swing.JList jListMedecins;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldMAJID;
    private javax.swing.JTextField jTextFieldMAJNom;
    private javax.swing.JTextField jTextFieldMAJPrenom;
    // End of variables declaration//GEN-END:variables
}
